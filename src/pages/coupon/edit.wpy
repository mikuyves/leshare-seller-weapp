<template>
    <Tips/>
    <view class="container" wx:if="{{init}}">
        <view class="h-gap"></view>
        <view class="weui-cells weui-cells-form">
            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">名称</view>
                </view>
                <view class="weui-cell__bd">
                    <input class="weui-input" id="name" @input="input" value="{{input.name}}" placeholder="优惠亮点，吸引客户"/>
                </view>
            </view>

            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">面值</view>
                </view>
                <view class="weui-cell__bd">
                    <input class="weui-input {{mode == 'edit' ? 'muted' : ''}}" id="price" @input="input"
                           value="{{input.price}}" type="digit" placeholder="请输入卡券抵扣金额" disabled="{{mode == 'edit'}}"/>
                </view>
            </view>
            <view class="weui-cell weui-cell_input weui-cells-form">
                <view class="weui-cell__hd">
                    <view class="weui-label">订单金额</view>
                </view>
                <view class="weui-cell__bd">
                    <input class="weui-input {{mode == 'edit' ? 'muted' : ''}}" id="limitPrice" @input="input"
                           value="{{input.limitPrice}}" type="digit" placeholder="请输入最低消费金额"
                           disabled="{{mode == 'edit'}}"/>
                </view>
            </view>
            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">限领张数</view>
                </view>
                <view class="weui-cell__bd">
                    <input class="weui-input {{mode == 'edit' ? 'muted' : ''}}" id="perLimit" @input="input"
                           value="{{input.perLimit}}" type="number" placeholder="请输入每人最多领几张"
                           disabled="{{mode == 'edit'}}"/>
                </view>
            </view>

            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">发放总量</view>
                </view>
                <view class="weui-cell__bd">
                    <input class="weui-input" id="stock" @input="input" value="{{input.stock}}" type="number"
                           placeholder="请输入卡券库存"/>
                </view>
            </view>

            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">生效时间</view>
                </view>
                <view class="weui-cell__bd">
                    <picker mode="date" id="beginTime" @change="input" value="{{input.beginTime}}"
                            disabled="{{mode == 'edit'}}">
                        <view class="weui-input {{mode == 'edit' ? 'muted' : ''}}">
                            {{input.beginTime ? input.beginTime : '请选择卡券生效时间'}}
                        </view>
                    </picker>
                </view>
            </view>

            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">过期时间</view>
                </view>
                <view class="weui-cell__bd">
                    <picker mode="date" id="dueTime" @change="input" value="{{input.dueTime}}"
                            disabled="{{mode == 'edit'}}">
                        <view class="weui-input {{mode == 'edit' ? 'muted' : ''}}">
                            {{input.dueTime ? input.dueTime : '请选择卡券过期时间'}}
                        </view>
                    </picker>
                </view>
            </view>
            <view class="weui-cell weui-cell_input">
                <view class="weui-cell__hd">
                    <view class="weui-label">使用场景</view>
                </view>
                <view class="weui-cell__bd">
                    <view @tap="action()" id="supportType" @change="input" >
                        <view class="weui-input {{mode == 'edit' ? 'muted' : ''}}">
                            {{support}}
                        </view>
                    </view>
                </view>
            </view>
            <view class="weui-cell weui-cell_switch weui-cells-form">
                <view class="weui-cell__bd">自助核销</view>
                <view class="weui-cell__ft">
                    <switch checked="{{input.isSelfUse}}" id="isSelfUse" @change="input"/>
                </view>
            </view>
        </view>
        <view class="h-gap"></view>
        <view class="weui-cell weui-cell_switch weui-cells-form">
            <view class="weui-cell__bd">自动赠送</view>
            <view class="weui-cell__ft">
                <switch checked="{{input.isPresent}}" id="isPresent" @change="input"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_input weui-cells-form" wx:if="{{input.isPresent}}">
            <view class="weui-cell__hd">
                <view class="weui-label">赠送条件</view>
            </view>
            <view class="weui-cell__bd">
                <input class="weui-input" id="presentFee" @input="input"
                       value="{{input.presentFee}}" type="digit" placeholder="请输入赠送订单金额"/>
            </view>
        </view>
        <text class="muted mt20 ml20">提示：已创建的卡券只能编辑名称及投放总量</text>

        <view class="zan-panel">
            <view class="zan-btns">
                <button class="zan-btn zan-btn--fill" @tap="submit">保存</button>
                <button class="zan-btn" @tap="remove({{couponId}})" wx:if="{{mode == 'edit'}}">删除</button>
            </view>
        </view>
    </view>
</template>

<style lang="scss">
    @import "../../styles/variable";
</style>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import input from '../../mixins/input';
  import coupon from '../../api/coupon';
  import ActionBar from '../../components/common/action_bar';
  import FormTips from '../../components/weui/tips';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';

  export default class CouponEdit extends wepy.page {
    def = {
      mode: 'create',
      init: false,
      couponId: 0
    };
    data = {...this.def};

    async onLoad ({couponId, mode}) {
      this.couponId = couponId;
      this.mode = mode;
      if (mode == 'edit') {
        this.input = await coupon.info(couponId);
        // 调整枚举值
        this.input.isPresent = this.input.isPresent == 1;
        this.input.isSelfUse = this.input.isSelfUse == 1;
      } else {
        this.input.perLimit = 1;
        this.input.supportType = 0;
        this.support = '通用';
        const myDate = new Date();
        this.input.beginTime = `${myDate.getFullYear()}-${myDate.getMonth() + 1}-${myDate.getDate()}`;
        this.input.dueTime = `${myDate.getFullYear()}-${myDate.getMonth() + 2}-${myDate.getDate()}`;
      }
      this.loaded();
    }

    methods = {
      async action () {
        if (this.mode == 'create') {
          const result = await Tips.action('通用', '线上', '线下');
          this.input.supportType = result.index;
          this.$apply();
        }
      },
      async submit () {
        if (!this.validate()) {
          return;
        }
        if (this.mode == 'create') {
          const param = {
            name: this.input.name,
            price: this.input.price,
            perLimit: this.input.perLimit,
            stock: this.input.stock,
            beginTime: this.input.beginTime,
            dueTime: this.input.dueTime,
            limitPrice: this.input.limitPrice,
            presentFee: this.input.presentFee,
            suitLimit: 0,
            isSelfUse: this.input.isSelfUse ? 1 : 0,
            isPresent: this.input.isPresent ? 1 : 0,
            supportType: this.input.supportType
          };
          await coupon.create(param);
          await Tips.success('创建成功！');
        } else if (this.mode == 'edit') {
          const param = {
            name: this.input.name,
            stock: this.input.stock,
            presentFee: this.input.presentFee,
            isSelfUse: this.input.isSelfUse ? 1 : 0,
            isPresent: this.input.isPresent ? 1 : 0
          };
          await coupon.update(this.couponId, param);
          await Tips.success('编辑成功！');
        }
        Event.emit(Event.COUPON_LIST_UPDATE);
        wepy.navigateBack();
      },
      async remove (couponId) {
        await Tips.confirm('确认删除该优惠券？');
        await coupon.remove(couponId);
        await Tips.success('删除成功');
        Event.emit(Event.COUPON_LIST_UPDATE);
        wepy.navigateBack();
      }
    };
    computed = {
      support() {
        if (this.input.supportType == null) {
          return '请选择使用场景';
        } else if (this.input.supportType == 0) {
          return '通用';
        } else if (this.input.supportType == 1) {
          return '线上';
        } else {
          return '线下';
        }
      }
    };

    validate () {
      const rules = [
        {
          value: this.input.name,
          method: 'required',
          message: '优惠券名称不能为空'
        },
        {
          value: this.input.name,
          method: 'minlength',
          param: 2,
          message: '优惠券名称太短'
        },
        {
          value: this.input.name,
          method: 'maxlength',
          param: 20,
          message: '优惠券名称太长'
        },
        {
          value: this.input.price,
          method: 'required',
          message: '优惠券面值不能为空'
        },
        {
          value: this.input.price,
          method: 'number',
          message: '优惠券面值必须为数字'
        },
        {
          value: this.input.price,
          method: 'min',
          param: 0.01,
          message: '优惠券面值不能为0或负数'
        },
        {
          value: this.input.price,
          method: 'max',
          param: this.input.limitPrice,
          message: '优惠券面值不能大于订单金额'
        },
        {
          value: this.input.price,
          method: 'max',
          param: 10000,
          message: '优惠券面值过高'
        },
        {
          value: this.input.limitPrice,
          method: 'required',
          message: '订单金额不能为空'
        },
        {
          value: this.input.limitPrice,
          method: 'number',
          message: '订单金额必须为数字'
        },
        {
          value: this.input.limitPrice,
          method: 'max',
          param: 10000,
          message: '订单金额过高'
        },
        {
          value: this.input.limitPrice,
          method: 'min',
          param: 0,
          message: '订单金额不能为负数'
        },
        {
          value: this.input.perLimit,
          method: 'required',
          message: '限领张数不能为空'
        },
        {
          value: this.input.perLimit,
          method: 'digits',
          message: '限领张数必须为整数'
        },
        {
          value: this.input.perLimit,
          method: 'min',
          param: 1,
          message: '至少需要能够领取一张'
        },
        {
          value: this.input.perLimit,
          method: 'max',
          param: 100,
          message: '每人不能领取超过100张'
        },
        {
          value: this.input.stock,
          method: 'required',
          message: '发放总量不能为空'
        },
        {
          value: this.input.stock,
          method: 'digits',
          message: '发放总量必须为整数'
        },
        {
          value: this.input.stock,
          method: 'min',
          param: 1,
          message: '至少需要发放张'
        },
        {
          value: this.input.stock,
          method: 'max',
          param: 10000,
          message: '发放总量过高'
        },
        {
          value: this.input.beginTime,
          method: 'required',
          message: '生效时间不能为空'
        },
        {
          value: this.input.dueTime,
          method: 'required',
          message: '过期时间不能为空'
        },
        {
          value: this.input.beginTime,
          method: 'before',
          param: this.input.dueTime,
          message: '生效时间不能晚于过期时间'
        },
        {
          value: this.input.dueTime,
          method: 'after',
          param: new Date().toISOString().substring(0, 10),
          message: '不能创建已经过期的优惠券'
        },
        {
          value: this.input.presentFee,
          method: 'digits',
          message: '赠送条件必须为整数'
        }
      ];
      if (this.input.isPresent == 1 && this.input.presentFee == null) {
        this.tips('赠送条件必须填写');
        return false;
      }
      return this.check(rules);
    }
    watch = {
      input(newValue, oldValue) {
        if (newValue.isPresent == true && (oldValue.isPresent == false || oldValue.isPresent == 0)) {
          this.input.presentFee = null;
        }
      }
    };
    components = {
      ActionBar: ActionBar,
      Tips: FormTips
    };
    mixins = [base, input];
    config = {
      navigationBarTitleText: '编辑优惠券'
    };
  }
</script>
