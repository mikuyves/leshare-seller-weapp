<template>
  <view class="container" wx:if="{{init}}">
    <!--TAB 页-->
    <CategoryTab :tab="tab" :categories.sync="categories" categoriesTitle="商品分类" @change.user="change"  />

    <!-- 商品列表 -->
    <repeat for="{{page.list}}" key="index" index="index" item="item">
      <GoodsItem :goods="item"></GoodsItem>
    </repeat>

    <!--操作栏-->
    <ActionBar @tap.user="add" okText="新增商品" cancelText="返回" />

    <!--占位符-->
    <Placeholder :show.sync="isPageEmpty" message="没有相关商品"/>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import pagination from '../../mixins/pagination';
  import goods from '../../api/goods';
  import GoodsItem from '../../components/goods/item';
  import CategoryTab from '../../components/zanui/category-tab';
  import ActionBar from '../../components/common/action_bar';
  import Placeholder from '../../components/common/placeholder';
  import AV from '../../utils/av-weapp-min.js'
  import Event from '../../utils/Event';

  export default class GoodsList extends wepy.page {
    def = {
      init: true,
      page: {
        list: []
      },
      tab: {
        list: [
          {id: '', title: '全部'},
          {id: 'isAllSoldOut', title: '已断货'},
          {id: 'isOnePrice', title: '一口价'}
        ],
        selectedId: '',
        categoryId: '',
        scroll: false
      },
      categories: [],
      cateTxt: ''
    }
    data = {...this.def};
    async onLoad () {
      this.page = goods.page(this);
      this.goods = this.page.list;
      this.categories = await goods.getCatesJSON()
      await this.next();
      Event.listen(Event.GOODS_LIST_UPDATE, this.update.bind(this), this);
      this.$apply();
    };
    // 获取分页参数
    params() {
      return {
        goods_status: this.tab.selectedId,
        category_id: this.tab.categoryId
      };
    }
    methods = {
      add() {
        this.$navigate('edit?mode=create');
      },
      change() {
        this.reload();
      },
      async test() {
        let query = new AV.Query('Prod');
        query.descending('createdAt');
        query.limit(10)
        let prods = await query.find();
        console.log(prods)
        for (let prod of prods) {
          let q = new AV.Query('Sku')
          q.equalTo('prod', prod)
          q.find().then(skus => console.log(skus))
        }
      }
    }
    events = {};
    components = {
      CategoryTab: CategoryTab,
      Placeholder: Placeholder,
      GoodsItem: GoodsItem,
      ActionBar: ActionBar
    };
    mixins = [base, pagination];
    config = {
      navigationBarTitleText: '商品管理',
      enablePullDownRefresh: true
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
</style>
