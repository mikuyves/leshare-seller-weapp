<template>
  <view class="container" wx:if="{{init}}">
    <!--TAB 页-->
    <CategoryTab :tab="tab" :categories.sync="categories" categoriesTitle="商品分类" @change.user="change"  />

    <!-- 搜索框 -->
    <view wx:if="{{ tab.selectedId == 'search'}}" class="zan-cell zan-form__item">
      <input class="zan-form__input zan-cell__bd" value="{{inputSearchKeyword}}" placeholder="请输入关键字..." @input="inputKeyword" />
    </view>
    <view>
      <block wx:for="{{search_keywords}}">
        <view @tap="deleteKeyword({{item}})" class="zan-label zan-label--small zan-label--plain">{{item}} <span style="color: grey;">  x</span></view>
      </block>
      <block wx:if="{{search_keywords.length > 0}}">
        <view @tap="clearKeyword" class="zan-label zan-label--small zan-label--plain"><span style="color: grey;">清空</span></view>
      </block>
    </view>

    <!-- 商品列表 -->
    <repeat for="{{page.list}}" key="index" index="index" item="item">
      <GoodsItem :goods="item"></GoodsItem>
    </repeat>

    <!-- 加载提示 -->
    <Loadmore :page.sync="page"/>

    <!--操作栏-->
    <ActionBar @tap.user="add" okText="新增商品" cancelText="返回" />

    <!--占位符-->
    <Placeholder :show.sync="isPageEmpty" message="您还没有相关商品"/>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import pagination from '../../mixins/pagination';
  import goods from '../../api/goods';
  import GoodsItem from '../../components/goods/item';
  import CategoryTab from '../../components/zanui/category-tab';
  import ActionBar from '../../components/common/action_bar';
  import Placeholder from '../../components/common/placeholder';
  import Loadmore from '../../components/weui/loadmore';
  import Event from '../../utils/Event';

  export default class GoodsList extends wepy.page {
    def = {
      init: false,
      page: {
        list: []
      },
      tab: {
        list: [
          {id: '', title: '全部'},
          {id: 'isAllSoldOut', title: '已断货'},
          {id: 'isOnePrice', title: '一口价'},
          {id: 'search', title: '搜索'}
        ],
        selectedId: '',
        categoryId: '',
        scroll: false
      },
      categories: [],
      cateTxt: '',
      inputSearchKeyword: '',
      search_keywords: []
    };
    data = {...this.def};
    async onLoad () {
      this.page = goods.page(this);
      this.goods = this.page.list;
      this.categories = await goods.getInnerCategories();
      await this.next();
      Event.listen(Event.GOODS_LIST_UPDATE, this.update.bind(this), this);
      Event.listen(Event.CATEGORY_LIST_UPDATE, this.updateCategories.bind(this), this);
    };
    // 获取分页参数
    params() {
      return {
        goods_status: this.tab.selectedId,
        category_id: this.tab.categoryId,
        search_keywords: this.search_keywords
      };
    }
    // 更新分类
    async updateCategories() {
      this.categories = await goods.getInnerCategories();
      this.loaded();
    }
    methods = {
      add() {
        this.$navigate('edit?mode=create');
      },
      change() {
        this.reload();
      },
      inputKeyword(e) {
        let input = e.detail.value;
        let keywords = [...new Set(input.trim().split(/\s+/))];
        this.inputSearchKeyword = input;
        this.search_keywords = keywords.filter(kw => kw !== '');
      },
      deleteKeyword(item) {
        let keywords = this.search_keywords.filter(kw => kw !== item);
        let input = keywords.join(' ').trim();
        this.search_keywords = keywords;
        this.inputSearchKeyword = input;
      },
      clearKeyword() {
        this.search_keywords = [];
        this.inputSearchKeyword = ''
      }
    };
    events = {};
    components = {
      CategoryTab: CategoryTab,
      Placeholder: Placeholder,
      GoodsItem: GoodsItem,
      ActionBar: ActionBar,
      Loadmore: Loadmore
    };
    mixins = [base, pagination];
    config = {
      navigationBarTitleText: '商品管理',
      enablePullDownRefresh: true
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
</style>
